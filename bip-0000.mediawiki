<pre>
  BIP: -
  Layer: Applications
  Title: Addition of UTXO-set hash in blocks
  Author: Btc_user1 <btc_dev@worldwidecrap.nl>
  Comments-Summary: No comments yet.
  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0000
  Status: Draft
  Type: Standards Track
  Created: 2021-05-15
  License: BSD-2-Clause
</pre>

==Introduction==
If in every block, an hash of the UTXO-Set / UTXO-state (after applying the TX's of the previous block) is included, 
this would eliminate the need for a full-chain initial block download for new nodes.
This way, only the latest N blocks and latest N UTXO-set needs to be stored & distributed among peers.

===Abstract===

Most nodes can store the UTXO data, which does not grow rapidly.
Verification of a freshly downloaded UTXO set (by new nodes) happens by looking at the UTXO-hash in the corresponding block on the chain.
Miners cannot include a false UTXO hash in a block because it will be rejected by nodes (This will require nodes and miners to hash the UTXO for every new block).
Even though the UTXO set is 4GB or so, a solution can be made to make it easier for nodes and miners to hash the 4GB UTXO set. 
For example the use of a Merkle Tree: keeping most hashes the same every new block, submitting the tree-root UTXO hash of previous block in a new block.
The Merkle Tree of the UTXO data does not have to be a binary tree: it may be altered to best fit its purpose (repetitively hashing a large file with ''(random?)'' local changes)

===Copyright===

This BIP is licensed under the 2-clause BSD license.

===Motivation===

It will eleminate the need for a full-chain initial block download.
As a side effect, it also makes it possible to significantly increase block size (since nobody needs to store the full-chain anymore, everyone can be a pruned node).

==Specification==
''How can a node figure out what is the right chain tip without being able to validate that block, which requires validating that this UTXO-hash is correct?''

The UTXO being transmitted to a new node should contain the block number of the corresponding UTXO (and blockchain starting from that point).Then when a new node wants to verify it, they check if the starting block+whole chain is valid like they do currently. The older the UTXO set (and thus longer the chain), the more certain a new node can be that the UTXO has not been altered.

Technical specifications TBD

==Backwards Compatibility==

Existing blocks on the blockchain cannot be retroactively equipped with UTXO hashes, there is no need for this however.

==Test Vectors==

TBD

==Rationale==

TBD

==Reference implementation==

TBD
